# Trillium API Path Configuration
# This file defines all paths used across the project
# Source this file to set up environment variables

# Base directory (auto-detected)
export TRILLIUM_BASE="${TRILLIUM_BASE:-/home/smilax/trillium_api}"

# Main directories
export TRILLIUM_SCRIPTS="${TRILLIUM_BASE}/scripts"
export TRILLIUM_SCRIPTS_BASH="${TRILLIUM_SCRIPTS}/bash"
export TRILLIUM_SCRIPTS_PYTHON="${TRILLIUM_SCRIPTS}/python"
export TRILLIUM_SCRIPTS_NODEJS="${TRILLIUM_SCRIPTS}/nodejs"
export TRILLIUM_SCRIPTS_SQL="${TRILLIUM_SCRIPTS}/sql"
export TRILLIUM_SCRIPTS_GETSLOTS="${TRILLIUM_SCRIPTS}/get_slots"

# Data directories
export TRILLIUM_DATA="${TRILLIUM_BASE}/data"
export TRILLIUM_DATA_EPOCHS="${TRILLIUM_DATA}/epochs"
export TRILLIUM_DATA_CONFIGS="${TRILLIUM_DATA}/configs"
export TRILLIUM_DATA_JSON="${TRILLIUM_DATA}/json"
export TRILLIUM_DATA_IMAGES="${TRILLIUM_DATA}/images"

# Config directory
export TRILLIUM_CONFIG="${TRILLIUM_BASE}/config"

# Log directory
export LOG_DIR="${LOG_DIR:-${HOME}/log}"

# Log configuration with validation
MAX_LOG_SIZE="${MAX_LOG_SIZE:-100M}"
# Ensure MAX_LOG_SIZE has a valid numeric value with M suffix
if [[ ! "$MAX_LOG_SIZE" =~ ^[0-9]+M$ ]]; then
    MAX_LOG_SIZE="100M"
fi
export MAX_LOG_SIZE

# Web directories
export TRILLIUM_WEB_ROOT="${TRILLIUM_WEB_ROOT:-/var/www/trillium}"
export TRILLIUM_WEB_JSON="${TRILLIUM_WEB_ROOT}/json"
export TRILLIUM_WEB_IMAGES="${TRILLIUM_WEB_ROOT}/images"

# Common script paths
export COMMON_LOG_SCRIPT="${TRILLIUM_SCRIPTS_BASH}/999_common_log.sh"
export DISCORD_NOTIFY_SCRIPT="${TRILLIUM_SCRIPTS_BASH}/999_discord_notify.sh"
export CONFIG_LOADER_SCRIPT="${TRILLIUM_SCRIPTS_BASH}/999_config_loader.sh"

# Python module paths
export PYTHON_LOGGING_CONFIG="${TRILLIUM_SCRIPTS_PYTHON}/999_logging_config.py"
export PYTHON_DB_CONFIG="${TRILLIUM_CONFIG}/db_config.py"

# Function to validate paths exist
validate_paths() {
    local missing_paths=()
    
    # Check critical directories
    for path in "$TRILLIUM_BASE" "$TRILLIUM_SCRIPTS" "$TRILLIUM_DATA"; do
        if [[ ! -d "$path" ]]; then
            missing_paths+=("$path")
        fi
    done
    
    if [[ ${#missing_paths[@]} -gt 0 ]]; then
        echo "‚ùå ERROR: Missing critical directories:"
        printf '%s\n' "${missing_paths[@]}"
        return 1
    fi
    
    return 0
}

# Function to create missing directories
ensure_directories() {
    # Create data directories if they don't exist
    mkdir -p "$TRILLIUM_DATA_EPOCHS"
    mkdir -p "$TRILLIUM_DATA_CONFIGS"
    mkdir -p "$TRILLIUM_DATA_JSON"
    mkdir -p "$TRILLIUM_DATA_IMAGES"
    mkdir -p "$LOG_DIR"
}

# Auto-create directories when sourced
ensure_directories

# Export a flag to indicate paths are loaded
export TRILLIUM_PATHS_LOADED=1